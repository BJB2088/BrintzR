# Simulating Data
# Royle's Model 
x=rpois(50,3)
sum(x)
mat=matrix(rep(x,6),nrow=50,ncol=6)
n=matrix(rbinom(300,x,.3),nrow=50,ncol=6)

# Migration 
x=rpois(50,3)
# Initial Matrix
mat=matrix(rep(x,6),nrow=50,ncol=6)
v=dim(mat)[2]
omega = .8
gamma = .2
# Survive and Gain
nmat=mat
for (i in 2:v){
  nmat[,i]=rbinom(50,mat[,i-1],omega) + rpois(50,gamma*mat[,i-1])
}
n=matrix(rbinom(300,as.vector(t(nmat)),.5),nrow=50,ncol=6,byrow=T)
#######

# Birds data 
birds=read.csv("birds.csv",header=TRUE)
head(birds)
n.it=t(birds)[8:57,]
n.it=n
start=c(as.vector(apply(n.it,1,max)),.8,1)

posterior <- function(param){
  N = rep(param[1:50],each=6)
  p = param[51]
  lam = param[52]
  singlelikelihoods = dbinom(as.vector(t(n.it)), N, p,log=T)
  Nprior=dpois(param[1:50],param[52],log=T)
  pprior=dunif(param[51],0,1,log=T)
  lamprior=dgamma(param[52],shape=1,scale=100,log=T)
  sumll = sum(singlelikelihoods,Nprior,pprior,lamprior)
  return(sumll)
}
proposalfunction <- function(param){
  mx=apply(n.it,1,max)
  Nval=round(rnorm(50,param[1:50]))
  p1=apply(cbind(mx,Nval),1,max)
  pval=rnorm(1,param[51],.2)
  p2 = if(pval >=1){1} else if(pval<=0){0} else{pval}
  lval=rnorm(1,param[52],.05)
  p3=ifelse(lval<0,0,lval)
  return(c(p1,p2,p3))
}
run_MH <- function(startvalue,j){
  stop=0
  repeat{
    proposal = proposalfunction(startvalue)[j]
    proptest = startvalue
    proptest[j] = proposal
    print(j)
    print(proposal)
    probab = exp(posterior(proptest) - posterior(startvalue))
    stop=ifelse(runif(1) < probab,1,0)
    if (stop>0) break
  }
  return(proptest)
}
gibbs <- function(startvalue,iterations){
  chain = array(dim = c(iterations+1,52))
  chain[1,] = startvalue
  for(i in 2:iterations){
    chain[i,]=chain[i-1,]
    for(j in 1:52){ # i is # of Params
      chain[i,j]=run_MH(chain[i,],j)[j]
    }
  }
  return(chain)
}
out=gibbs(start,1000)
qplot(200:1000,out[200:1000,52],geom="line")
apply(out[500:1000,],2,mean)
apply(out[500:1000,],2,quantile,c(.025,.975))
sum(apply(out[500:1000,],2,mean)[1:50])

out[500:1000,1]

qplot(1:10000,dgamma(1:10000,shape=1,scale=100),geom="line") + geom_point(aes(x=2,y=dgamma(2,shape=1,scale=100)))


